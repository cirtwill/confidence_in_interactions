# Data generated by manuscript/figure_binomial.R

import sys
import math
import random
from decimal import *
import numpy as np

#Pygrace libraries
from PyGrace.grace import Grace
from PyGrace.colors import RandomColorScheme, MarkovChainColorScheme, ColorBrewerScheme
from PyGrace.dataset import SYMBOLS
from PyGrace.Extensions.panel import NetworkPanel,Panel,MultiPanelGrace
from PyGrace.drawing_objects import DrawText, DrawLine, DrawBox
from PyGrace.axis import LINEAR_SCALE, LOGARITHMIC_SCALE
from PyGrace.Extensions.network import Network

from PyGrace.Extensions.distribution import CDFGraph, PDFGraph
from PyGrace.Extensions.latex_string import LatexString, CONVERT
from PyGrace.Extensions.colorbar import SolidRectangle, ColorBar
from PyGrace.Styles.el import ElGraph, ElLinColorBar, ElLogColorBar

colors=ColorBrewerScheme('Spectral')  # The blue is very beautiful but maybe harder to see.
# colors.add_color(120,120,120,'grey')

def read_Rfiles(filename):
  dataset=[]

  f=open(filename,'r')
  for line in f:
    if line.split()[0]!='"method"':
      n=int(line.split()[3])
      upper=float(line.split()[-1])
      dataset.append((n,upper))
  f.close()

  return dataset

def format_graph(graph):
  graph.yaxis.bar.linewidth=1
  graph.xaxis.bar.linewidth=1
  graph.frame.linewidth=1
  graph.world.xmin=0
  graph.world.xmax=32
  graph.world.ymin=-0
  graph.world.ymax=1

  graph.yaxis.tick.configure(major=.20,onoff='on',minor_ticks=1,major_size=.5,minor_size=.3,place='normal',major_linewidth=1,minor_linewidth=1)
  graph.yaxis.ticklabel.configure(char_size=.75,format='decimal',prec=1)

  graph.xaxis.tick.configure(major=10,onoff='on',minor_ticks=1,major_size=.5,place='normal',minor_size=.3,major_linewidth=1,minor_linewidth=1)
  graph.xaxis.ticklabel.configure(char_size=.75,format='decimal',prec=0)

  graph.xaxis.label.configure(text="Number of samples",char_size=1,just=2,place='normal')
  graph.yaxis.label.configure(text="Upper bound of 95% confidence interval",char_size=1,just=2)
  graph.legend.configure(box_linestyle=0,fill=0,fill_pattern=0,char_size=.75,
    loc=(100,.75),loctype='world')
  # graph.add_drawing_object(DrawText,text="Threshold",x=150,y=.9,char_size=.75,just=2,loctype='world')

  return graph

def populate_graph(graph,dataset):

  data=graph.add_dataset(dataset)
  data.symbol.shape=0
  data.line.configure(linewidth=2,linestyle=1)

  bar95=graph.add_dataset([(0,0.1),(1000,.1)])
  bar95.symbol.shape=0
  bar95.line.configure(linewidth=2,linestyle=2,color=2)

  return graph


grace=Grace(colors=colors)

dataset=read_Rfiles('../../data/R/CI_and_samples.tsv')


graph=grace.add_graph()
graph=format_graph(graph)
graph=populate_graph(graph,dataset)
graph.set_view(0.15,0.15,0.95,0.65)

grace.write_file('../../manuscript/figures/upper_limit_DG.eps')
